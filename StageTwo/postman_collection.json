{
	"info": {
		"_postman_id": "22896618-d21d-4669-a482-dc02cbdffb98",
		"name": "HNGx - CRUD",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24107617"
	},
	"item": [
		{
			"name": "Create Person Record",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var requestBody = pm.request.body.toString();",
							"var requestBodyJson = JSON.parse(requestBody);",
							"var requestName = requestBodyJson.full_name; ",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"pm.test(\"Created Person Name\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql(requestName);",
							"})",
							"",
							"pm.test(\"Response Message\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"record succesfully created\");",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"full_name\": \"{{user1}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api",
					"host": [
						"{{url}}"
					],
					"path": [
						"api"
					]
				}
			},
			"response": [
				{
					"name": "Create Person Record",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"full_name\": \"{{user1}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api",
							"host": [
								"{{url}}"
							],
							"path": [
								"api"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Date",
							"value": "Wed, 13 Sep 2023 17:37:35 GMT"
						},
						{
							"key": "Content-Length",
							"value": "152"
						}
					],
					"cookie": [],
					"body": "{\n    \"msg\": \"record succesfully created\",\n    \"id\": 1,\n    \"name\": \"David Oluwatobi\",\n    \"createdAt\": \"0001-01-01T00:00:00Z\",\n    \"updatedAt\": \"0001-01-01T00:00:00Z\",\n    \"status\": 201\n}"
				}
			]
		},
		{
			"name": "Create Person - Test Data 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var requestBody = pm.request.body.toString();",
							"var requestBodyJson = JSON.parse(requestBody);",
							"var requestName = requestBodyJson.full_name; ",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"pm.test(\"Created Person Name\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql(requestName);",
							"})",
							"",
							"pm.test(\"Response Message\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"record succesfully created\");",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"full_name\": \"{{user2}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api",
					"host": [
						"{{url}}"
					],
					"path": [
						"api"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Person - Test Data 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var requestBody = pm.request.body.toString();",
							"var requestBodyJson = JSON.parse(requestBody);",
							"var requestName = requestBodyJson.full_name; ",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"pm.test(\"Created Person Name\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql(requestName);",
							"})",
							"",
							"pm.test(\"Response Message\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"record succesfully created\");",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"full_name\": \"{{user3}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api",
					"host": [
						"{{url}}"
					],
					"path": [
						"api"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Person - Test Data 4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var requestBody = pm.request.body.toString();",
							"var requestBodyJson = JSON.parse(requestBody);",
							"var requestName = requestBodyJson.full_name; ",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"pm.test(\"Created Person Name\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql(requestName);",
							"})",
							"",
							"pm.test(\"Response Message\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"record succesfully created\");",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"full_name\": \"{{user4}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api",
					"host": [
						"{{url}}"
					],
					"path": [
						"api"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Person - Test Data 5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var requestBody = pm.request.body.toString();",
							"var requestBodyJson = JSON.parse(requestBody);",
							"var requestName = requestBodyJson.full_name; ",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"pm.test(\"Created Person Name\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql(requestName);",
							"})",
							"",
							"pm.test(\"Response Message\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"record succesfully created\");",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"full_name\": \"{{user5}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api",
					"host": [
						"{{url}}"
					],
					"path": [
						"api"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Person Record by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var url = pm.request.url.toString();",
							"var matches = url.match(/\\/api\\/(\\d+)/);",
							"var userIdStr = matches[1];",
							"var userId = parseInt(userIdStr, 10);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"pm.test(\"Response Message\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"record succesfully retrieved\");",
							"})",
							"",
							"pm.test(\"Retrieved Person ID\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.eql(userId);",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/api/1",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"1"
					]
				}
			},
			"response": [
				{
					"name": "Get Person Record by ID",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Date",
							"value": "Wed, 13 Sep 2023 18:35:07 GMT"
						},
						{
							"key": "Content-Length",
							"value": "161"
						}
					],
					"cookie": [],
					"body": "{\n    \"msg\": \"record succesfully retrieved\",\n    \"id\": 1,\n    \"name\": \"David Oluwatobi\",\n    \"createdAt\": \"2023-09-13T19:34:23.249634Z\",\n    \"updatedAt\": \"0001-01-01T00:00:00Z\",\n    \"status\": 200\n}"
				}
			]
		},
		{
			"name": "Get Person Record by Name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var url = pm.request.url.toString();",
							"var urlParts = url.split('/');",
							"var apiIndex = urlParts.indexOf('api');",
							"var userNameUndecoded = urlParts[apiIndex + 1];",
							"var userName = decodeURIComponent(userNameUndecoded);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"pm.test(\"Retrieved Person Name\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql(userName);",
							"})",
							"",
							"pm.test(\"Response Message\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"record succesfully retrieved\");",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/David Oluwatobi",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"David Oluwatobi"
					]
				}
			},
			"response": [
				{
					"name": "Get Person Record by Name",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/David Oluwatobi",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"David Oluwatobi"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Date",
							"value": "Wed, 13 Sep 2023 18:35:19 GMT"
						},
						{
							"key": "Content-Length",
							"value": "161"
						}
					],
					"cookie": [],
					"body": "{\n    \"msg\": \"record succesfully retrieved\",\n    \"id\": 1,\n    \"name\": \"David Oluwatobi\",\n    \"createdAt\": \"2023-09-13T19:34:23.249634Z\",\n    \"updatedAt\": \"0001-01-01T00:00:00Z\",\n    \"status\": 200\n}"
				}
			]
		},
		{
			"name": "Get all Person Records",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var url = pm.request.url.toString();",
							"var urlParts = url.split('/');",
							"var apiIndex = urlParts.indexOf('api');",
							"var userNameUndecoded = urlParts[apiIndex + 1];",
							"var userName = decodeURIComponent(userNameUndecoded);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"pm.test(\"Response Message\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"records successfully retrieved\");",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/api",
					"host": [
						"{{url}}"
					],
					"path": [
						"api"
					]
				}
			},
			"response": [
				{
					"name": "Get all Person Records",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api",
							"host": [
								"{{url}}"
							],
							"path": [
								"api"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Date",
							"value": "Wed, 13 Sep 2023 18:35:25 GMT"
						},
						{
							"key": "Content-Length",
							"value": "915"
						}
					],
					"cookie": [],
					"body": "{\n    \"msg\": \"records successfully retrieved\",\n    \"status\": 200,\n    \"record\": [\n        {\n            \"id\": 1,\n            \"full_name\": \"David Oluwatobi\",\n            \"is_deleted\": false,\n            \"created_at\": \"2023-09-13T19:34:23.249634Z\",\n            \"updated_at\": \"0001-01-01T00:00:00Z\",\n            \"deleted_at\": \"0001-01-01T00:00:00Z\"\n        },\n        {\n            \"id\": 2,\n            \"full_name\": \"Mark Essien\",\n            \"is_deleted\": false,\n            \"created_at\": \"2023-09-13T19:34:48.372627Z\",\n            \"updated_at\": \"0001-01-01T00:00:00Z\",\n            \"deleted_at\": \"0001-01-01T00:00:00Z\"\n        },\n        {\n            \"id\": 3,\n            \"full_name\": \"Ijaya Ronald\",\n            \"is_deleted\": false,\n            \"created_at\": \"2023-09-13T19:34:57.794192Z\",\n            \"updated_at\": \"0001-01-01T00:00:00Z\",\n            \"deleted_at\": \"0001-01-01T00:00:00Z\"\n        },\n        {\n            \"id\": 4,\n            \"full_name\": \"Marv Ike\",\n            \"is_deleted\": false,\n            \"created_at\": \"2023-09-13T19:35:00.804852Z\",\n            \"updated_at\": \"0001-01-01T00:00:00Z\",\n            \"deleted_at\": \"0001-01-01T00:00:00Z\"\n        },\n        {\n            \"id\": 5,\n            \"full_name\": \"Adewale Sunday\",\n            \"is_deleted\": false,\n            \"created_at\": \"2023-09-13T19:35:03.943513Z\",\n            \"updated_at\": \"0001-01-01T00:00:00Z\",\n            \"deleted_at\": \"0001-01-01T00:00:00Z\"\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "Update Person Record by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var url = pm.request.url.toString();",
							"var matches = url.match(/\\/api\\/(\\d+)/);",
							"var userIdStr = matches[1];",
							"var userId = parseInt(userIdStr, 10); ",
							"",
							"var requestBody = pm.request.body.toString();",
							"var requestBodyJson = JSON.parse(requestBody);",
							"var requestName = requestBodyJson.full_name; ",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"pm.test(\"Updated Person Name\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql(requestName);",
							"})",
							"",
							"pm.test(\"Response Message\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"record successfully updated\");",
							"})",
							"",
							"pm.test(\"Updated Person ID\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.eql(userId);",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"full_name\": \"{{user6}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/1",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"1"
					]
				}
			},
			"response": [
				{
					"name": "Update Person Record by ID",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"full_name\": \"{{user6}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"1"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Date",
							"value": "Wed, 13 Sep 2023 18:35:32 GMT"
						},
						{
							"key": "Content-Length",
							"value": "165"
						}
					],
					"cookie": [],
					"body": "{\n    \"msg\": \"record successfully updated\",\n    \"id\": 1,\n    \"name\": \"Ajayi Thomas\",\n    \"createdAt\": \"0001-01-01T00:00:00Z\",\n    \"updatedAt\": \"2023-09-13T19:35:32.159499159+01:00\",\n    \"status\": 200\n}"
				}
			]
		},
		{
			"name": "Update Person Record by Name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var requestBody = pm.request.body.toString();",
							"var requestBodyJson = JSON.parse(requestBody);",
							"var requestName = requestBodyJson.full_name; ",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"pm.test(\"Updated Person Name\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql(requestName);",
							"})",
							"",
							"pm.test(\"Response Message\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"record successfully updated\");",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"full_name\": \"{{user7}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/{{user2}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"{{user2}}"
					]
				}
			},
			"response": [
				{
					"name": "Update Person Record by Name",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"full_name\": \"{{user7}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/{{user2}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{user2}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Date",
							"value": "Wed, 13 Sep 2023 18:35:38 GMT"
						},
						{
							"key": "Content-Length",
							"value": "158"
						}
					],
					"cookie": [],
					"body": "{\n    \"msg\": \"record successfully updated\",\n    \"name\": \"Bode Ezekiel\",\n    \"createdAt\": \"0001-01-01T00:00:00Z\",\n    \"updatedAt\": \"2023-09-13T19:35:38.818360418+01:00\",\n    \"status\": 200\n}"
				}
			]
		},
		{
			"name": "Delete Person Record by ID - Soft Delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"pm.test(\"Response Message\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"record successfully deleted\");",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"url": {
					"raw": "{{url}}/api/soft_delete/2",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"soft_delete",
						"2"
					]
				}
			},
			"response": [
				{
					"name": "Delete Person Record by ID - Soft Delete",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{url}}/api/soft_delete/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"soft_delete",
								"2"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Date",
							"value": "Wed, 13 Sep 2023 18:35:48 GMT"
						},
						{
							"key": "Content-Length",
							"value": "138"
						}
					],
					"cookie": [],
					"body": "{\n    \"msg\": \"record successfully deleted\",\n    \"id\": 0,\n    \"name\": \"\",\n    \"createdAt\": \"0001-01-01T00:00:00Z\",\n    \"updatedAt\": \"0001-01-01T00:00:00Z\",\n    \"status\": 200\n}"
				}
			]
		},
		{
			"name": "Delete Person Record by Name - Soft Delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"pm.test(\"Response Message\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"record successfully deleted\");",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"url": {
					"raw": "{{url}}/api/soft_delete/{{user3}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"soft_delete",
						"{{user3}}"
					]
				}
			},
			"response": [
				{
					"name": "Delete Person Record by Name - Soft Delete",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{url}}/api/soft_delete/{{user3}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"soft_delete",
								"{{user3}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Date",
							"value": "Wed, 13 Sep 2023 18:35:57 GMT"
						},
						{
							"key": "Content-Length",
							"value": "138"
						}
					],
					"cookie": [],
					"body": "{\n    \"msg\": \"record successfully deleted\",\n    \"id\": 0,\n    \"name\": \"\",\n    \"createdAt\": \"0001-01-01T00:00:00Z\",\n    \"updatedAt\": \"0001-01-01T00:00:00Z\",\n    \"status\": 200\n}"
				}
			]
		},
		{
			"name": "Delete Person Record by Name - Hard Delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"pm.test(\"Response Message\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"record successfully deleted\");",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/api/{{user5}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"{{user5}}"
					]
				}
			},
			"response": [
				{
					"name": "Delete Person Record by Name - Hard Delete",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/api/{{user5}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"{{user5}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Date",
							"value": "Wed, 13 Sep 2023 18:36:05 GMT"
						},
						{
							"key": "Content-Length",
							"value": "138"
						}
					],
					"cookie": [],
					"body": "{\n    \"msg\": \"record successfully deleted\",\n    \"id\": 0,\n    \"name\": \"\",\n    \"createdAt\": \"0001-01-01T00:00:00Z\",\n    \"updatedAt\": \"0001-01-01T00:00:00Z\",\n    \"status\": 200\n}"
				}
			]
		},
		{
			"name": "Delete Person Record by ID - Hard Delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"pm.test(\"Response Message\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"record successfully deleted\");",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/api/2",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"2"
					]
				}
			},
			"response": [
				{
					"name": "Delete Person Record by ID - Hard Delete",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/api/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"2"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Date",
							"value": "Wed, 13 Sep 2023 18:36:16 GMT"
						},
						{
							"key": "Content-Length",
							"value": "138"
						}
					],
					"cookie": [],
					"body": "{\n    \"msg\": \"record successfully deleted\",\n    \"id\": 0,\n    \"name\": \"\",\n    \"createdAt\": \"0001-01-01T00:00:00Z\",\n    \"updatedAt\": \"0001-01-01T00:00:00Z\",\n    \"status\": 200\n}"
				}
			]
		}
	]
}